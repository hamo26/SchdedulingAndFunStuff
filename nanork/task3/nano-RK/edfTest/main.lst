   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 137               		.data
 138               	.LC0:
 139 0000 4265 6769 		.string	"Beginning task %d\n"
 139      6E6E 696E 
 139      6720 7461 
 139      736B 2025 
 139      640A 00
 140               		.text
 142               	.global	task_2_func
 144               	task_2_func:
 145               		.stabd	46,0,0
   1:main.c        **** #include <nrk.h>
   2:main.c        **** #include <include.h>
   3:main.c        **** #include <ulib.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <hal.h>
   6:main.c        **** #include <nrk_error.h>
   7:main.c        **** #include <nrk_timer.h>
   8:main.c        **** #include <nrk_stack_check.h>
   9:main.c        **** #include <nrk_stats.h>
  10:main.c        **** 
  11:main.c        **** #define CHECK_PERIOD    200
  12:main.c        **** #define LEEWAY_FACTOR   4/5
  13:main.c        **** 
  14:main.c        **** #define TASK(n, task_period, task_execution)                                \
  15:main.c        ****     void task_##n##_func()                                                  \
  16:main.c        ****     {                                                                       \
  17:main.c        ****                                                                             \
  18:main.c        ****         while (1)                                                           \
  19:main.c        ****         {									\
  20:main.c        **** 	nrk_wait_until_next_period();	    \
  21:main.c        **** 	printf("Beginning task %d\n", n);                                	\
  22:main.c        ****         }                                                                   \
  23:main.c        ****     }                                                                       \
  24:main.c        ****     NRK_STK stack_##n[NRK_APP_STACKSIZE];                                   \
  25:main.c        ****     nrk_task_type task_##n;                                                 \
  26:main.c        ****     uint32_t task_##n##_period = task_period;                               \
  27:main.c        ****     uint32_t task_##n##_execution = task_execution;                         \
  28:main.c        **** 
  29:main.c        **** #define ACTIVATE_TASK(n)                                                    \
  30:main.c        ****     task_##n.prio = 10 - n;                                                      \
  31:main.c        ****     task_##n.FirstActivation = TRUE;                                        \
  32:main.c        ****     task_##n.Type = BASIC_TASK;                                             \
  33:main.c        ****     task_##n.SchType = PREEMPTIVE;                                          \
  34:main.c        ****     task_##n.period.secs = task_##n##_period;                               \
  35:main.c        ****     task_##n.period.nano_secs = 0;                                          \
  36:main.c        ****     task_##n.cpu_reserve.secs = task_##n##_execution;                       \
  37:main.c        ****     task_##n.cpu_reserve.nano_secs = 0;                                     \
  38:main.c        ****     task_##n.offset.secs = 0;                                               \
  39:main.c        ****     task_##n.offset.nano_secs = 0;                                          \
  40:main.c        ****     nrk_task_set_entry_function(&task_##n, task_##n##_func);                \
  41:main.c        ****     nrk_task_set_stk(&task_##n, stack_##n, NRK_APP_STACKSIZE);              \
  42:main.c        ****     nrk_activate_task(&task_##n)
  43:main.c        **** 
  44:main.c        **** TASK(1, 4, 2);
  45:main.c        **** TASK(2, 7, 3);
 147               	.LM0:
 148               	.LFBB1:
 149 0000 0F93      		push r16
 150 0002 1F93      		push r17
 151 0004 CF93      		push r28
 152 0006 DF93      		push r29
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 4 */
 156               	.L__stack_usage = 4
 158               	.LM1:
 159 0008 00E0      		ldi r16,lo8(.LC0)
 160 000a 10E0      		ldi r17,hi8(.LC0)
 161 000c C2E0      		ldi r28,lo8(2)
 162 000e D0E0      		ldi r29,hi8(2)
 163               	.L2:
 165               	.LM2:
 166 0010 0E94 0000 		call nrk_wait_until_next_period
 167 0014 00D0      		rcall .
 168 0016 00D0      		rcall .
 169 0018 EDB7      		in r30,__SP_L__
 170 001a FEB7      		in r31,__SP_H__
 171 001c 1283      		std Z+2,r17
 172 001e 0183      		std Z+1,r16
 173 0020 D483      		std Z+4,r29
 174 0022 C383      		std Z+3,r28
 175 0024 0E94 0000 		call printf
 176 0028 0F90      		pop __tmp_reg__
 177 002a 0F90      		pop __tmp_reg__
 178 002c 0F90      		pop __tmp_reg__
 179 002e 0F90      		pop __tmp_reg__
 180 0030 00C0      		rjmp .L2
 182               	.Lscope1:
 184               		.stabd	78,0,0
 186               	.global	task_1_func
 188               	task_1_func:
 189               		.stabd	46,0,0
  44:main.c        **** TASK(1, 4, 2);
 191               	.LM3:
 192               	.LFBB2:
 193 0032 0F93      		push r16
 194 0034 1F93      		push r17
 195 0036 CF93      		push r28
 196 0038 DF93      		push r29
 197               	/* prologue: function */
 198               	/* frame size = 0 */
 199               	/* stack size = 4 */
 200               	.L__stack_usage = 4
  44:main.c        **** TASK(1, 4, 2);
 202               	.LM4:
 203 003a 00E0      		ldi r16,lo8(.LC0)
 204 003c 10E0      		ldi r17,hi8(.LC0)
 205 003e C1E0      		ldi r28,lo8(1)
 206 0040 D0E0      		ldi r29,hi8(1)
 207               	.L4:
  44:main.c        **** TASK(1, 4, 2);
 209               	.LM5:
 210 0042 0E94 0000 		call nrk_wait_until_next_period
 211 0046 00D0      		rcall .
 212 0048 00D0      		rcall .
 213 004a EDB7      		in r30,__SP_L__
 214 004c FEB7      		in r31,__SP_H__
 215 004e 1283      		std Z+2,r17
 216 0050 0183      		std Z+1,r16
 217 0052 D483      		std Z+4,r29
 218 0054 C383      		std Z+3,r28
 219 0056 0E94 0000 		call printf
 220 005a 0F90      		pop __tmp_reg__
 221 005c 0F90      		pop __tmp_reg__
 222 005e 0F90      		pop __tmp_reg__
 223 0060 0F90      		pop __tmp_reg__
 224 0062 00C0      		rjmp .L4
 226               	.Lscope2:
 228               		.stabd	78,0,0
 230               	.global	main
 232               	main:
 233               		.stabd	46,0,0
  46:main.c        **** //TASK(3, 8, 3);
  47:main.c        **** 
  48:main.c        **** int main ()
  49:main.c        **** {
 235               	.LM6:
 236               	.LFBB3:
 237 0064 1F93      		push r17
 238 0066 CF93      		push r28
 239 0068 DF93      		push r29
 240               	/* prologue: function */
 241               	/* frame size = 0 */
 242               	/* stack size = 3 */
 243               	.L__stack_usage = 3
  50:main.c        ****     nrk_setup_ports();
 245               	.LM7:
 246 006a 0E94 0000 		call nrk_setup_ports
  51:main.c        ****     nrk_setup_uart(UART_BAUDRATE_115K2);
 248               	.LM8:
 249 006e 87E0      		ldi r24,lo8(7)
 250 0070 90E0      		ldi r25,hi8(7)
 251 0072 0E94 0000 		call nrk_setup_uart
  52:main.c        **** 
  53:main.c        ****     nrk_init();
 253               	.LM9:
 254 0076 0E94 0000 		call nrk_init
  54:main.c        **** 
  55:main.c        ****     nrk_led_clr(ORANGE_LED);
 256               	.LM10:
 257 007a 80E0      		ldi r24,lo8(0)
 258 007c 90E0      		ldi r25,hi8(0)
 259 007e 0E94 0000 		call nrk_led_clr
  56:main.c        ****     nrk_led_clr(BLUE_LED);
 261               	.LM11:
 262 0082 8FEF      		ldi r24,lo8(255)
 263 0084 90E0      		ldi r25,hi8(255)
 264 0086 0E94 0000 		call nrk_led_clr
  57:main.c        ****     nrk_led_clr(GREEN_LED);
 266               	.LM12:
 267 008a 81E0      		ldi r24,lo8(1)
 268 008c 90E0      		ldi r25,hi8(1)
 269 008e 0E94 0000 		call nrk_led_clr
  58:main.c        ****     nrk_led_clr(RED_LED);
 271               	.LM13:
 272 0092 82E0      		ldi r24,lo8(2)
 273 0094 90E0      		ldi r25,hi8(2)
 274 0096 0E94 0000 		call nrk_led_clr
  59:main.c        **** 
  60:main.c        ****     nrk_time_set(0,0);
 276               	.LM14:
 277 009a 60E0      		ldi r22,lo8(0)
 278 009c 70E0      		ldi r23,hi8(0)
 279 009e CB01      		movw r24,r22
 280 00a0 20E0      		ldi r18,lo8(0)
 281 00a2 30E0      		ldi r19,hi8(0)
 282 00a4 A901      		movw r20,r18
 283 00a6 0E94 0000 		call nrk_time_set
  61:main.c        **** 
  62:main.c        ****     ACTIVATE_TASK(1);
 285               	.LM15:
 286 00aa 89E0      		ldi r24,lo8(9)
 287 00ac 8093 0000 		sts task_1+8,r24
 288 00b0 11E0      		ldi r17,lo8(1)
 289 00b2 1093 0000 		sts task_1+7,r17
 290 00b6 1093 0000 		sts task_1+9,r17
 291 00ba 1093 0000 		sts task_1+10,r17
 292 00be 8091 0000 		lds r24,task_1_period
 293 00c2 9091 0000 		lds r25,task_1_period+1
 294 00c6 A091 0000 		lds r26,task_1_period+2
 295 00ca B091 0000 		lds r27,task_1_period+3
 296 00ce 8093 0000 		sts task_1+11,r24
 297 00d2 9093 0000 		sts task_1+11+1,r25
 298 00d6 A093 0000 		sts task_1+11+2,r26
 299 00da B093 0000 		sts task_1+11+3,r27
 300 00de 1092 0000 		sts task_1+15,__zero_reg__
 301 00e2 1092 0000 		sts task_1+15+1,__zero_reg__
 302 00e6 1092 0000 		sts task_1+15+2,__zero_reg__
 303 00ea 1092 0000 		sts task_1+15+3,__zero_reg__
 304 00ee 8091 0000 		lds r24,task_1_execution
 305 00f2 9091 0000 		lds r25,task_1_execution+1
 306 00f6 A091 0000 		lds r26,task_1_execution+2
 307 00fa B091 0000 		lds r27,task_1_execution+3
 308 00fe 8093 0000 		sts task_1+19,r24
 309 0102 9093 0000 		sts task_1+19+1,r25
 310 0106 A093 0000 		sts task_1+19+2,r26
 311 010a B093 0000 		sts task_1+19+3,r27
 312 010e 1092 0000 		sts task_1+23,__zero_reg__
 313 0112 1092 0000 		sts task_1+23+1,__zero_reg__
 314 0116 1092 0000 		sts task_1+23+2,__zero_reg__
 315 011a 1092 0000 		sts task_1+23+3,__zero_reg__
 316 011e 1092 0000 		sts task_1+27,__zero_reg__
 317 0122 1092 0000 		sts task_1+27+1,__zero_reg__
 318 0126 1092 0000 		sts task_1+27+2,__zero_reg__
 319 012a 1092 0000 		sts task_1+27+3,__zero_reg__
 320 012e 1092 0000 		sts task_1+31,__zero_reg__
 321 0132 1092 0000 		sts task_1+31+1,__zero_reg__
 322 0136 1092 0000 		sts task_1+31+2,__zero_reg__
 323 013a 1092 0000 		sts task_1+31+3,__zero_reg__
 324 013e C0E0      		ldi r28,lo8(task_1)
 325 0140 D0E0      		ldi r29,hi8(task_1)
 326 0142 CE01      		movw r24,r28
 327 0144 60E0      		ldi r22,lo8(gs(task_1_func))
 328 0146 70E0      		ldi r23,hi8(gs(task_1_func))
 329 0148 0E94 0000 		call nrk_task_set_entry_function
 330 014c CE01      		movw r24,r28
 331 014e 60E0      		ldi r22,lo8(stack_1)
 332 0150 70E0      		ldi r23,hi8(stack_1)
 333 0152 40E8      		ldi r20,lo8(128)
 334 0154 50E0      		ldi r21,hi8(128)
 335 0156 0E94 0000 		call nrk_task_set_stk
 336 015a CE01      		movw r24,r28
 337 015c 0E94 0000 		call nrk_activate_task
  63:main.c        ****     ACTIVATE_TASK(2);
 339               	.LM16:
 340 0160 88E0      		ldi r24,lo8(8)
 341 0162 8093 0000 		sts task_2+8,r24
 342 0166 1093 0000 		sts task_2+7,r17
 343 016a 1093 0000 		sts task_2+9,r17
 344 016e 1093 0000 		sts task_2+10,r17
 345 0172 8091 0000 		lds r24,task_2_period
 346 0176 9091 0000 		lds r25,task_2_period+1
 347 017a A091 0000 		lds r26,task_2_period+2
 348 017e B091 0000 		lds r27,task_2_period+3
 349 0182 8093 0000 		sts task_2+11,r24
 350 0186 9093 0000 		sts task_2+11+1,r25
 351 018a A093 0000 		sts task_2+11+2,r26
 352 018e B093 0000 		sts task_2+11+3,r27
 353 0192 1092 0000 		sts task_2+15,__zero_reg__
 354 0196 1092 0000 		sts task_2+15+1,__zero_reg__
 355 019a 1092 0000 		sts task_2+15+2,__zero_reg__
 356 019e 1092 0000 		sts task_2+15+3,__zero_reg__
 357 01a2 8091 0000 		lds r24,task_2_execution
 358 01a6 9091 0000 		lds r25,task_2_execution+1
 359 01aa A091 0000 		lds r26,task_2_execution+2
 360 01ae B091 0000 		lds r27,task_2_execution+3
 361 01b2 8093 0000 		sts task_2+19,r24
 362 01b6 9093 0000 		sts task_2+19+1,r25
 363 01ba A093 0000 		sts task_2+19+2,r26
 364 01be B093 0000 		sts task_2+19+3,r27
 365 01c2 1092 0000 		sts task_2+23,__zero_reg__
 366 01c6 1092 0000 		sts task_2+23+1,__zero_reg__
 367 01ca 1092 0000 		sts task_2+23+2,__zero_reg__
 368 01ce 1092 0000 		sts task_2+23+3,__zero_reg__
 369 01d2 1092 0000 		sts task_2+27,__zero_reg__
 370 01d6 1092 0000 		sts task_2+27+1,__zero_reg__
 371 01da 1092 0000 		sts task_2+27+2,__zero_reg__
 372 01de 1092 0000 		sts task_2+27+3,__zero_reg__
 373 01e2 1092 0000 		sts task_2+31,__zero_reg__
 374 01e6 1092 0000 		sts task_2+31+1,__zero_reg__
 375 01ea 1092 0000 		sts task_2+31+2,__zero_reg__
 376 01ee 1092 0000 		sts task_2+31+3,__zero_reg__
 377 01f2 C0E0      		ldi r28,lo8(task_2)
 378 01f4 D0E0      		ldi r29,hi8(task_2)
 379 01f6 CE01      		movw r24,r28
 380 01f8 60E0      		ldi r22,lo8(gs(task_2_func))
 381 01fa 70E0      		ldi r23,hi8(gs(task_2_func))
 382 01fc 0E94 0000 		call nrk_task_set_entry_function
 383 0200 CE01      		movw r24,r28
 384 0202 60E0      		ldi r22,lo8(stack_2)
 385 0204 70E0      		ldi r23,hi8(stack_2)
 386 0206 40E8      		ldi r20,lo8(128)
 387 0208 50E0      		ldi r21,hi8(128)
 388 020a 0E94 0000 		call nrk_task_set_stk
 389 020e CE01      		movw r24,r28
 390 0210 0E94 0000 		call nrk_activate_task
  64:main.c        ****  //   ACTIVATE_TASK(3);
  65:main.c        **** 
  66:main.c        ****     nrk_start();
 392               	.LM17:
 393 0214 0E94 0000 		call nrk_start
  67:main.c        **** 
  68:main.c        ****     return 0;
  69:main.c        **** }
 395               	.LM18:
 396 0218 80E0      		ldi r24,lo8(0)
 397 021a 90E0      		ldi r25,hi8(0)
 398               	/* epilogue start */
 399 021c DF91      		pop r29
 400 021e CF91      		pop r28
 401 0220 1F91      		pop r17
 402 0222 0895      		ret
 404               	.Lscope3:
 406               		.stabd	78,0,0
 407               	.global	task_1_period
 408               		.data
 411               	task_1_period:
 412 0013 04        		.byte	4
 413 0014 00        		.byte	0
 414 0015 00        		.byte	0
 415 0016 00        		.byte	0
 416               	.global	task_1_execution
 419               	task_1_execution:
 420 0017 02        		.byte	2
 421 0018 00        		.byte	0
 422 0019 00        		.byte	0
 423 001a 00        		.byte	0
 424               	.global	task_2_period
 427               	task_2_period:
 428 001b 07        		.byte	7
 429 001c 00        		.byte	0
 430 001d 00        		.byte	0
 431 001e 00        		.byte	0
 432               	.global	task_2_execution
 435               	task_2_execution:
 436 001f 03        		.byte	3
 437 0020 00        		.byte	0
 438 0021 00        		.byte	0
 439 0022 00        		.byte	0
 440               		.comm _nrk_signal_list,4,1
 441               		.comm nrk_idle_task_stk,128,1
 442               		.comm nrk_kernel_stk_ptr,2,1
 443               		.comm error_task,1,1
 444               		.comm error_num,1,1
 445               		.comm _nrk_prev_timer_val,1,1
 446               		.comm _nrk_time_trigger,1,1
 447               		.comm app_timer0_callback,2,1
 448               		.comm app_timer0_prescale,1,1
 449               		.comm stack_1,128,1
 450               		.comm task_1,35,1
 451               		.comm stack_2,128,1
 452               		.comm task_2,35,1
 470               		.text
 472               	.Letext0:
 473               	.global __do_copy_data
 474               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccvQqEVJ.s:2      *ABS*:0000003f __SREG__
     /tmp/ccvQqEVJ.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccvQqEVJ.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccvQqEVJ.s:5      *ABS*:00000034 __CCP__
     /tmp/ccvQqEVJ.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccvQqEVJ.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccvQqEVJ.s:144    .text:00000000 task_2_func
     /tmp/ccvQqEVJ.s:188    .text:00000032 task_1_func
     /tmp/ccvQqEVJ.s:232    .text:00000064 main
                            *COM*:00000023 task_1
     /tmp/ccvQqEVJ.s:411    .data:00000013 task_1_period
     /tmp/ccvQqEVJ.s:419    .data:00000017 task_1_execution
                            *COM*:00000080 stack_1
                            *COM*:00000023 task_2
     /tmp/ccvQqEVJ.s:427    .data:0000001b task_2_period
     /tmp/ccvQqEVJ.s:435    .data:0000001f task_2_execution
                            *COM*:00000080 stack_2
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num
                            *COM*:00000001 _nrk_prev_timer_val
                            *COM*:00000001 _nrk_time_trigger
                            *COM*:00000002 app_timer0_callback
                            *COM*:00000001 app_timer0_prescale

UNDEFINED SYMBOLS
nrk_wait_until_next_period
printf
nrk_setup_ports
nrk_setup_uart
nrk_init
nrk_led_clr
nrk_time_set
nrk_task_set_entry_function
nrk_task_set_stk
nrk_activate_task
nrk_start
__do_copy_data
__do_clear_bss
