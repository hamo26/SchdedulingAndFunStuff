   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 137               		.data
 138               	.LC0:
 139 0000 0A2D 2D2D 		.string	"\n------\nStart running task..%d\n"
 139      2D2D 2D0A 
 139      5374 6172 
 139      7420 7275 
 139      6E6E 696E 
 140               	.LC1:
 141 0020 536F 6D65 		.string	"Some busy tasks"
 141      2062 7573 
 141      7920 7461 
 141      736B 7300 
 142               	.LC2:
 143 0030 4669 6E69 		.string	"Finishing the task %d\n------\n\n"
 143      7368 696E 
 143      6720 7468 
 143      6520 7461 
 143      736B 2025 
 144               		.text
 146               	.global	task_3_func
 148               	task_3_func:
 149               		.stabd	46,0,0
   1:main.c        **** #include <nrk.h>
   2:main.c        **** #include <include.h>
   3:main.c        **** #include <ulib.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <hal.h>
   6:main.c        **** #include <nrk_error.h>
   7:main.c        **** #include <nrk_timer.h>
   8:main.c        **** #include <nrk_stack_check.h>
   9:main.c        **** 
  10:main.c        **** /*
  11:main.c        ****    To stay inline (no pun intended) with the nano-rk direction of using guards for 
  12:main.c        ****    optimization and potential performance, we use macros rather than methods.
  13:main.c        ****    We could have created a method, but the call may be expensive and impede the performance of the 
  14:main.c        ****  */
  15:main.c        **** #define TASK(n, taskPeriod, taskExecution)                              \
  16:main.c        ****     void task_##n##_func()                                              \
  17:main.c        **** {                                                                       \
  18:main.c        ****     int task_ID =  nrk_cur_task_TCB->task_ID;				\
  19:main.c        ****     int k=0;								\
  20:main.c        ****     while (1)                                                           \
  21:main.c        ****     {									\
  22:main.c        **** 	printf("\n------\nStart running task..%d\n", n);            \
  23:main.c        **** 	long int duty = rand()*4;					\
  24:main.c        **** 	if(duty<0) duty = 0-duty;					\
  25:main.c        **** 	if(n==2){							\
  26:main.c        **** 	    printf("Duty amount is %d\n",duty);				\
  27:main.c        **** 	    for(int i=0;i<=duty;i++){				\
  28:main.c        **** 		if(i%2000==0){					\
  29:main.c        **** 		    printf("CBS budget is %d\n", nrk_task_TCB[task_ID].cpu_remaining);\
  30:main.c        **** 		    for(int j=0;j<9999;j++){k++;}			\
  31:main.c        **** 		    printf("Busying with task 2(CBS) %d out of %d\n",i,duty);\
  32:main.c        **** 		}							\
  33:main.c        **** 	    }							\
  34:main.c        **** 	}else{for(int i=0;i<10;i++){k++;}printf("Some busy tasks\n");}	\
  35:main.c        **** 	printf("Finishing the task %d\n------\n\n",n);		\
  36:main.c        **** 	nrk_wait_until_next_period();				\
  37:main.c        ****     }                                                      \
  38:main.c        **** }                                                                   \
  39:main.c        **** NRK_STK stack_##n[NRK_APP_STACKSIZE];                                   \
  40:main.c        **** nrk_task_type task_##n;                                                 \
  41:main.c        **** uint32_t task_##n##_period = taskPeriod;                               	\
  42:main.c        **** uint32_t task_##n##_execution = taskExecution;                         	\
  43:main.c        **** 
  44:main.c        **** /*"Instantiate" the task*/
  45:main.c        **** #define INITIALIZE_TASK(n,task_type)                                    \
  46:main.c        **** task_##n.FirstActivation = TRUE;                                        \
  47:main.c        **** task_##n.prio = n;							\
  48:main.c        **** task_##n.Type = task_type;                                             \
  49:main.c        **** task_##n.SchType = PREEMPTIVE;                                          \
  50:main.c        **** task_##n.period.secs = task_##n##_period;                               \
  51:main.c        **** task_##n.period.nano_secs = 0;                                          \
  52:main.c        **** task_##n.cpu_reserve.secs = task_##n##_execution;                      \
  53:main.c        **** task_##n.cpu_reserve.nano_secs = 0;                                     \
  54:main.c        **** task_##n.offset.secs = 0;                                               \
  55:main.c        **** task_##n.offset.nano_secs = 0;                                          \
  56:main.c        **** nrk_task_set_entry_function(&task_##n, task_##n##_func);            \
  57:main.c        **** nrk_task_set_stk(&task_##n, stack_##n, NRK_APP_STACKSIZE);              \
  58:main.c        **** nrk_activate_task(&task_##n)						
  59:main.c        **** 
  60:main.c        **** //"Instantiate" tasks.
  61:main.c        **** TASK(1, 6, 3);
  62:main.c        **** TASK(2, 5, 1);
  63:main.c        **** TASK(3, 7, 1);
 151               	.LM0:
 152               	.LFBB1:
 153 0000 EF92      		push r14
 154 0002 FF92      		push r15
 155 0004 0F93      		push r16
 156 0006 1F93      		push r17
 157 0008 CF93      		push r28
 158 000a DF93      		push r29
 159               	/* prologue: function */
 160               	/* frame size = 0 */
 161               	/* stack size = 6 */
 162               	.L__stack_usage = 6
 163               	.LBB2:
 165               	.LM1:
 166 000c 80E0      		ldi r24,lo8(.LC0)
 167 000e E82E      		mov r14,r24
 168 0010 80E0      		ldi r24,hi8(.LC0)
 169 0012 F82E      		mov r15,r24
 170 0014 C3E0      		ldi r28,lo8(3)
 171 0016 D0E0      		ldi r29,hi8(3)
 172 0018 00E0      		ldi r16,lo8(.LC2)
 173 001a 10E0      		ldi r17,hi8(.LC2)
 174               	.L2:
 176               	.LM2:
 177 001c 00D0      		rcall .
 178 001e 00D0      		rcall .
 179 0020 EDB7      		in r30,__SP_L__
 180 0022 FEB7      		in r31,__SP_H__
 181 0024 F282      		std Z+2,r15
 182 0026 E182      		std Z+1,r14
 183 0028 D483      		std Z+4,r29
 184 002a C383      		std Z+3,r28
 185 002c 0E94 0000 		call printf
 186 0030 0F90      		pop __tmp_reg__
 187 0032 0F90      		pop __tmp_reg__
 188 0034 0F90      		pop __tmp_reg__
 189 0036 0F90      		pop __tmp_reg__
 190 0038 0E94 0000 		call rand
 191 003c 80E0      		ldi r24,lo8(.LC1)
 192 003e 90E0      		ldi r25,hi8(.LC1)
 193 0040 0E94 0000 		call puts
 194 0044 00D0      		rcall .
 195 0046 00D0      		rcall .
 196 0048 EDB7      		in r30,__SP_L__
 197 004a FEB7      		in r31,__SP_H__
 198 004c 1283      		std Z+2,r17
 199 004e 0183      		std Z+1,r16
 200 0050 D483      		std Z+4,r29
 201 0052 C383      		std Z+3,r28
 202 0054 0E94 0000 		call printf
 203 0058 0F90      		pop __tmp_reg__
 204 005a 0F90      		pop __tmp_reg__
 205 005c 0F90      		pop __tmp_reg__
 206 005e 0F90      		pop __tmp_reg__
 207 0060 0E94 0000 		call nrk_wait_until_next_period
 208 0064 00C0      		rjmp .L2
 209               	.LBE2:
 211               	.Lscope1:
 213               		.stabd	78,0,0
 214               		.data
 215               	.LC3:
 216 004f 4475 7479 		.string	"Duty amount is %d\n"
 216      2061 6D6F 
 216      756E 7420 
 216      6973 2025 
 216      640A 00
 217               	.LC4:
 218 0062 4342 5320 		.string	"CBS budget is %d\n"
 218      6275 6467 
 218      6574 2069 
 218      7320 2564 
 218      0A00 
 219               	.LC5:
 220 0074 4275 7379 		.string	"Busying with task 2(CBS) %d out of %d\n"
 220      696E 6720 
 220      7769 7468 
 220      2074 6173 
 220      6B20 3228 
 221               		.text
 223               	.global	task_2_func
 225               	task_2_func:
 226               		.stabd	46,0,0
  62:main.c        **** TASK(2, 5, 1);
 228               	.LM3:
 229               	.LFBB2:
 230 0066 2F92      		push r2
 231 0068 3F92      		push r3
 232 006a 4F92      		push r4
 233 006c 5F92      		push r5
 234 006e 6F92      		push r6
 235 0070 7F92      		push r7
 236 0072 8F92      		push r8
 237 0074 9F92      		push r9
 238 0076 AF92      		push r10
 239 0078 BF92      		push r11
 240 007a CF92      		push r12
 241 007c DF92      		push r13
 242 007e EF92      		push r14
 243 0080 FF92      		push r15
 244 0082 0F93      		push r16
 245 0084 1F93      		push r17
 246 0086 CF93      		push r28
 247 0088 DF93      		push r29
 248               	/* prologue: function */
 249               	/* frame size = 0 */
 250               	/* stack size = 18 */
 251               	.L__stack_usage = 18
  62:main.c        **** TASK(2, 5, 1);
 253               	.LM4:
 254 008a E091 0000 		lds r30,nrk_cur_task_TCB
 255 008e F091 0000 		lds r31,nrk_cur_task_TCB+1
 256 0092 8085      		ldd r24,Z+8
 257 0094 9927      		clr r25
 258 0096 87FD      		sbrc r24,7
 259 0098 9095      		com r25
 260               	.LBB3:
 261 009a E0E0      		ldi r30,lo8(.LC0)
 262 009c 8E2E      		mov r8,r30
 263 009e E0E0      		ldi r30,hi8(.LC0)
 264 00a0 9E2E      		mov r9,r30
 265 00a2 72E0      		ldi r23,lo8(2)
 266 00a4 A72E      		mov r10,r23
 267 00a6 B12C      		mov r11,__zero_reg__
 268 00a8 60E0      		ldi r22,lo8(.LC3)
 269 00aa 662E      		mov r6,r22
 270 00ac 60E0      		ldi r22,hi8(.LC3)
 271 00ae 762E      		mov r7,r22
 272               	.LBB4:
 273 00b0 50ED      		ldi r21,lo8(2000)
 274 00b2 452E      		mov r4,r21
 275 00b4 57E0      		ldi r21,hi8(2000)
 276 00b6 552E      		mov r5,r21
 277 00b8 40E0      		ldi r20,lo8(.LC4)
 278 00ba 242E      		mov r2,r20
 279 00bc 40E0      		ldi r20,hi8(.LC4)
 280 00be 342E      		mov r3,r20
 281 00c0 6C01      		movw r12,r24
 282 00c2 CC0C      		lsl r12
 283 00c4 DD1C      		rol r13
 284 00c6 25E0      		ldi r18,5
 285 00c8 880F      	1:	lsl r24
 286 00ca 991F      		rol r25
 287 00cc 2A95      		dec r18
 288 00ce 01F4      		brne 1b
 289 00d0 C80E      		add r12,r24
 290 00d2 D91E      		adc r13,r25
 291 00d4 80E0      		ldi r24,lo8(nrk_task_TCB+25)
 292 00d6 90E0      		ldi r25,hi8(nrk_task_TCB+25)
 293 00d8 C80E      		add r12,r24
 294 00da D91E      		adc r13,r25
 295               	.L8:
 296               	.LBE4:
  62:main.c        **** TASK(2, 5, 1);
 298               	.LM5:
 299 00dc 00D0      		rcall .
 300 00de 00D0      		rcall .
 301 00e0 ADB7      		in r26,__SP_L__
 302 00e2 BEB7      		in r27,__SP_H__
 303 00e4 1296      		adiw r26,1+1
 304 00e6 9C92      		st X,r9
 305 00e8 8E92      		st -X,r8
 306 00ea 1197      		sbiw r26,1
 307 00ec 1496      		adiw r26,3+1
 308 00ee BC92      		st X,r11
 309 00f0 AE92      		st -X,r10
 310 00f2 1397      		sbiw r26,3
 311 00f4 0E94 0000 		call printf
 312 00f8 0F90      		pop __tmp_reg__
 313 00fa 0F90      		pop __tmp_reg__
 314 00fc 0F90      		pop __tmp_reg__
 315 00fe 0F90      		pop __tmp_reg__
 316 0100 0E94 0000 		call rand
 317 0104 7C01      		movw r14,r24
 318 0106 EE0C      		lsl r14
 319 0108 FF1C      		rol r15
 320 010a EE0C      		lsl r14
 321 010c FF1C      		rol r15
 322 010e 0027      		clr r16
 323 0110 F7FC      		sbrc r15,7
 324 0112 0095      		com r16
 325 0114 102F      		mov r17,r16
 326 0116 17FF      		sbrs r17,7
 327 0118 00C0      		rjmp .L4
 328 011a 1095      		com r17
 329 011c 0095      		com r16
 330 011e F094      		com r15
 331 0120 E094      		com r14
 332 0122 E11C      		adc r14,__zero_reg__
 333 0124 F11C      		adc r15,__zero_reg__
 334 0126 011D      		adc r16,__zero_reg__
 335 0128 111D      		adc r17,__zero_reg__
 336               	.L4:
 337 012a 00D0      		rcall .
 338 012c 00D0      		rcall .
 339 012e 00D0      		rcall .
 340 0130 EDB7      		in r30,__SP_L__
 341 0132 FEB7      		in r31,__SP_H__
 342 0134 7282      		std Z+2,r7
 343 0136 6182      		std Z+1,r6
 344 0138 ADB7      		in r26,__SP_L__
 345 013a BEB7      		in r27,__SP_H__
 346 013c 1396      		adiw r26,3
 347 013e ED92      		st X+,r14
 348 0140 FD92      		st X+,r15
 349 0142 0D93      		st X+,r16
 350 0144 1C93      		st X,r17
 351 0146 1697      		sbiw r26,3+3
 352 0148 0E94 0000 		call printf
 353               	.LBB5:
 354 014c EDB7      		in r30,__SP_L__
 355 014e FEB7      		in r31,__SP_H__
 356 0150 3696      		adiw r30,6
 357 0152 0FB6      		in __tmp_reg__,__SREG__
 358 0154 F894      		cli
 359 0156 FEBF      		out __SP_H__,r31
 360 0158 0FBE      		out __SREG__,__tmp_reg__
 361 015a EDBF      		out __SP_L__,r30
 362 015c C0E0      		ldi r28,lo8(0)
 363 015e D0E0      		ldi r29,hi8(0)
 364 0160 00C0      		rjmp .L5
 365               	.L7:
  62:main.c        **** TASK(2, 5, 1);
 367               	.LM6:
 368 0162 CE01      		movw r24,r28
 369 0164 B201      		movw r22,r4
 370 0166 0E94 0000 		call __divmodhi4
 371 016a 0097      		sbiw r24,0
 372 016c 01F4      		brne .L6
  62:main.c        **** TASK(2, 5, 1);
 374               	.LM7:
 375 016e 00D0      		rcall .
 376 0170 00D0      		rcall .
 377 0172 ADB7      		in r26,__SP_L__
 378 0174 BEB7      		in r27,__SP_H__
 379 0176 1296      		adiw r26,1+1
 380 0178 3C92      		st X,r3
 381 017a 2E92      		st -X,r2
 382 017c 1197      		sbiw r26,1
 383 017e F601      		movw r30,r12
 384 0180 8081      		ld r24,Z
 385 0182 9181      		ldd r25,Z+1
 386 0184 1496      		adiw r26,3+1
 387 0186 9C93      		st X,r25
 388 0188 8E93      		st -X,r24
 389 018a 1397      		sbiw r26,3
 390 018c 0E94 0000 		call printf
 391 0190 00D0      		rcall .
 392 0192 00D0      		rcall .
 393 0194 EDB7      		in r30,__SP_L__
 394 0196 FEB7      		in r31,__SP_H__
 395 0198 3196      		adiw r30,1
 396 019a 80E0      		ldi r24,lo8(.LC5)
 397 019c 90E0      		ldi r25,hi8(.LC5)
 398 019e ADB7      		in r26,__SP_L__
 399 01a0 BEB7      		in r27,__SP_H__
 400 01a2 1296      		adiw r26,1+1
 401 01a4 9C93      		st X,r25
 402 01a6 8E93      		st -X,r24
 403 01a8 1197      		sbiw r26,1
 404 01aa D383      		std Z+3,r29
 405 01ac C283      		std Z+2,r28
 406 01ae E482      		std Z+4,r14
 407 01b0 F582      		std Z+5,r15
 408 01b2 0683      		std Z+6,r16
 409 01b4 1783      		std Z+7,r17
 410 01b6 0E94 0000 		call printf
 411 01ba ADB7      		in r26,__SP_L__
 412 01bc BEB7      		in r27,__SP_H__
 413 01be 1896      		adiw r26,8
 414 01c0 0FB6      		in __tmp_reg__,__SREG__
 415 01c2 F894      		cli
 416 01c4 BEBF      		out __SP_H__,r27
 417 01c6 0FBE      		out __SREG__,__tmp_reg__
 418 01c8 ADBF      		out __SP_L__,r26
 419               	.L6:
  62:main.c        **** TASK(2, 5, 1);
 421               	.LM8:
 422 01ca 2196      		adiw r28,1
 423               	.L5:
  62:main.c        **** TASK(2, 5, 1);
 425               	.LM9:
 426 01cc CE01      		movw r24,r28
 427 01ce AA27      		clr r26
 428 01d0 97FD      		sbrc r25,7
 429 01d2 A095      		com r26
 430 01d4 BA2F      		mov r27,r26
 431 01d6 E816      		cp r14,r24
 432 01d8 F906      		cpc r15,r25
 433 01da 0A07      		cpc r16,r26
 434 01dc 1B07      		cpc r17,r27
 435 01de 04F4      		brge .L7
 436               	.LBE5:
  62:main.c        **** TASK(2, 5, 1);
 438               	.LM10:
 439 01e0 00D0      		rcall .
 440 01e2 00D0      		rcall .
 441 01e4 80E0      		ldi r24,lo8(.LC2)
 442 01e6 90E0      		ldi r25,hi8(.LC2)
 443 01e8 EDB7      		in r30,__SP_L__
 444 01ea FEB7      		in r31,__SP_H__
 445 01ec 9283      		std Z+2,r25
 446 01ee 8183      		std Z+1,r24
 447 01f0 B482      		std Z+4,r11
 448 01f2 A382      		std Z+3,r10
 449 01f4 0E94 0000 		call printf
 450 01f8 0F90      		pop __tmp_reg__
 451 01fa 0F90      		pop __tmp_reg__
 452 01fc 0F90      		pop __tmp_reg__
 453 01fe 0F90      		pop __tmp_reg__
 454 0200 0E94 0000 		call nrk_wait_until_next_period
 455               	.LBE3:
 456 0204 00C0      		rjmp .L8
 467               	.Lscope2:
 469               		.stabd	78,0,0
 471               	.global	task_1_func
 473               	task_1_func:
 474               		.stabd	46,0,0
  61:main.c        **** TASK(1, 6, 3);
 476               	.LM11:
 477               	.LFBB3:
 478 0206 EF92      		push r14
 479 0208 FF92      		push r15
 480 020a 0F93      		push r16
 481 020c 1F93      		push r17
 482 020e CF93      		push r28
 483 0210 DF93      		push r29
 484               	/* prologue: function */
 485               	/* frame size = 0 */
 486               	/* stack size = 6 */
 487               	.L__stack_usage = 6
 488               	.LBB6:
  61:main.c        **** TASK(1, 6, 3);
 490               	.LM12:
 491 0212 F0E0      		ldi r31,lo8(.LC0)
 492 0214 EF2E      		mov r14,r31
 493 0216 F0E0      		ldi r31,hi8(.LC0)
 494 0218 FF2E      		mov r15,r31
 495 021a C1E0      		ldi r28,lo8(1)
 496 021c D0E0      		ldi r29,hi8(1)
 497 021e 00E0      		ldi r16,lo8(.LC2)
 498 0220 10E0      		ldi r17,hi8(.LC2)
 499               	.L10:
  61:main.c        **** TASK(1, 6, 3);
 501               	.LM13:
 502 0222 00D0      		rcall .
 503 0224 00D0      		rcall .
 504 0226 EDB7      		in r30,__SP_L__
 505 0228 FEB7      		in r31,__SP_H__
 506 022a F282      		std Z+2,r15
 507 022c E182      		std Z+1,r14
 508 022e D483      		std Z+4,r29
 509 0230 C383      		std Z+3,r28
 510 0232 0E94 0000 		call printf
 511 0236 0F90      		pop __tmp_reg__
 512 0238 0F90      		pop __tmp_reg__
 513 023a 0F90      		pop __tmp_reg__
 514 023c 0F90      		pop __tmp_reg__
 515 023e 0E94 0000 		call rand
 516 0242 80E0      		ldi r24,lo8(.LC1)
 517 0244 90E0      		ldi r25,hi8(.LC1)
 518 0246 0E94 0000 		call puts
 519 024a 00D0      		rcall .
 520 024c 00D0      		rcall .
 521 024e EDB7      		in r30,__SP_L__
 522 0250 FEB7      		in r31,__SP_H__
 523 0252 1283      		std Z+2,r17
 524 0254 0183      		std Z+1,r16
 525 0256 D483      		std Z+4,r29
 526 0258 C383      		std Z+3,r28
 527 025a 0E94 0000 		call printf
 528 025e 0F90      		pop __tmp_reg__
 529 0260 0F90      		pop __tmp_reg__
 530 0262 0F90      		pop __tmp_reg__
 531 0264 0F90      		pop __tmp_reg__
 532 0266 0E94 0000 		call nrk_wait_until_next_period
 533 026a 00C0      		rjmp .L10
 534               	.LBE6:
 536               	.Lscope3:
 538               		.stabd	78,0,0
 540               	.global	main
 542               	main:
 543               		.stabd	46,0,0
  64:main.c        **** 
  65:main.c        **** nrk_time_t *seed;
  66:main.c        **** 
  67:main.c        **** int main ()
  68:main.c        **** {
 545               	.LM14:
 546               	.LFBB4:
 547 026c 0F93      		push r16
 548 026e 1F93      		push r17
 549 0270 CF93      		push r28
 550 0272 DF93      		push r29
 551               	/* prologue: function */
 552               	/* frame size = 0 */
 553               	/* stack size = 4 */
 554               	.L__stack_usage = 4
  69:main.c        ****     nrk_setup_ports();
 556               	.LM15:
 557 0274 0E94 0000 		call nrk_setup_ports
  70:main.c        ****     nrk_setup_uart(UART_BAUDRATE_115K2);
 559               	.LM16:
 560 0278 87E0      		ldi r24,lo8(7)
 561 027a 90E0      		ldi r25,hi8(7)
 562 027c 0E94 0000 		call nrk_setup_uart
  71:main.c        **** 
  72:main.c        ****     nrk_init();
 564               	.LM17:
 565 0280 0E94 0000 		call nrk_init
  73:main.c        **** 
  74:main.c        ****     nrk_time_set(0,0);
 567               	.LM18:
 568 0284 60E0      		ldi r22,lo8(0)
 569 0286 70E0      		ldi r23,hi8(0)
 570 0288 CB01      		movw r24,r22
 571 028a 20E0      		ldi r18,lo8(0)
 572 028c 30E0      		ldi r19,hi8(0)
 573 028e A901      		movw r20,r18
 574 0290 0E94 0000 		call nrk_time_set
  75:main.c        **** 
  76:main.c        ****     nrk_time_get(seed);
 576               	.LM19:
 577 0294 8091 0000 		lds r24,seed
 578 0298 9091 0000 		lds r25,seed+1
 579 029c 0E94 0000 		call nrk_time_get
  77:main.c        ****     srand(seed->nano_secs);
 581               	.LM20:
 582 02a0 E091 0000 		lds r30,seed
 583 02a4 F091 0000 		lds r31,seed+1
 584 02a8 6481      		ldd r22,Z+4
 585 02aa 7581      		ldd r23,Z+5
 586 02ac 8681      		ldd r24,Z+6
 587 02ae 9781      		ldd r25,Z+7
 588 02b0 0E94 0000 		call srand
  78:main.c        **** 
  79:main.c        ****     //Initialize tasks 
  80:main.c        ****     //Higher value higher priority`
  81:main.c        ****     INITIALIZE_TASK(1, BASIC_TASK);
 590               	.LM21:
 591 02b4 11E0      		ldi r17,lo8(1)
 592 02b6 1093 0000 		sts task_1+7,r17
 593 02ba 1093 0000 		sts task_1+8,r17
 594 02be 1093 0000 		sts task_1+9,r17
 595 02c2 1093 0000 		sts task_1+10,r17
 596 02c6 8091 0000 		lds r24,task_1_period
 597 02ca 9091 0000 		lds r25,task_1_period+1
 598 02ce A091 0000 		lds r26,task_1_period+2
 599 02d2 B091 0000 		lds r27,task_1_period+3
 600 02d6 8093 0000 		sts task_1+11,r24
 601 02da 9093 0000 		sts task_1+11+1,r25
 602 02de A093 0000 		sts task_1+11+2,r26
 603 02e2 B093 0000 		sts task_1+11+3,r27
 604 02e6 1092 0000 		sts task_1+15,__zero_reg__
 605 02ea 1092 0000 		sts task_1+15+1,__zero_reg__
 606 02ee 1092 0000 		sts task_1+15+2,__zero_reg__
 607 02f2 1092 0000 		sts task_1+15+3,__zero_reg__
 608 02f6 8091 0000 		lds r24,task_1_execution
 609 02fa 9091 0000 		lds r25,task_1_execution+1
 610 02fe A091 0000 		lds r26,task_1_execution+2
 611 0302 B091 0000 		lds r27,task_1_execution+3
 612 0306 8093 0000 		sts task_1+19,r24
 613 030a 9093 0000 		sts task_1+19+1,r25
 614 030e A093 0000 		sts task_1+19+2,r26
 615 0312 B093 0000 		sts task_1+19+3,r27
 616 0316 1092 0000 		sts task_1+23,__zero_reg__
 617 031a 1092 0000 		sts task_1+23+1,__zero_reg__
 618 031e 1092 0000 		sts task_1+23+2,__zero_reg__
 619 0322 1092 0000 		sts task_1+23+3,__zero_reg__
 620 0326 1092 0000 		sts task_1+27,__zero_reg__
 621 032a 1092 0000 		sts task_1+27+1,__zero_reg__
 622 032e 1092 0000 		sts task_1+27+2,__zero_reg__
 623 0332 1092 0000 		sts task_1+27+3,__zero_reg__
 624 0336 1092 0000 		sts task_1+31,__zero_reg__
 625 033a 1092 0000 		sts task_1+31+1,__zero_reg__
 626 033e 1092 0000 		sts task_1+31+2,__zero_reg__
 627 0342 1092 0000 		sts task_1+31+3,__zero_reg__
 628 0346 C0E0      		ldi r28,lo8(task_1)
 629 0348 D0E0      		ldi r29,hi8(task_1)
 630 034a CE01      		movw r24,r28
 631 034c 60E0      		ldi r22,lo8(gs(task_1_func))
 632 034e 70E0      		ldi r23,hi8(gs(task_1_func))
 633 0350 0E94 0000 		call nrk_task_set_entry_function
 634 0354 CE01      		movw r24,r28
 635 0356 60E0      		ldi r22,lo8(stack_1)
 636 0358 70E0      		ldi r23,hi8(stack_1)
 637 035a 40E8      		ldi r20,lo8(128)
 638 035c 50E0      		ldi r21,hi8(128)
 639 035e 0E94 0000 		call nrk_task_set_stk
 640 0362 CE01      		movw r24,r28
 641 0364 0E94 0000 		call nrk_activate_task
  82:main.c        ****     INITIALIZE_TASK(2, CBS_TASK);
 643               	.LM22:
 644 0368 1093 0000 		sts task_2+7,r17
 645 036c 82E0      		ldi r24,lo8(2)
 646 036e 8093 0000 		sts task_2+8,r24
 647 0372 03E0      		ldi r16,lo8(3)
 648 0374 0093 0000 		sts task_2+9,r16
 649 0378 1093 0000 		sts task_2+10,r17
 650 037c 8091 0000 		lds r24,task_2_period
 651 0380 9091 0000 		lds r25,task_2_period+1
 652 0384 A091 0000 		lds r26,task_2_period+2
 653 0388 B091 0000 		lds r27,task_2_period+3
 654 038c 8093 0000 		sts task_2+11,r24
 655 0390 9093 0000 		sts task_2+11+1,r25
 656 0394 A093 0000 		sts task_2+11+2,r26
 657 0398 B093 0000 		sts task_2+11+3,r27
 658 039c 1092 0000 		sts task_2+15,__zero_reg__
 659 03a0 1092 0000 		sts task_2+15+1,__zero_reg__
 660 03a4 1092 0000 		sts task_2+15+2,__zero_reg__
 661 03a8 1092 0000 		sts task_2+15+3,__zero_reg__
 662 03ac 8091 0000 		lds r24,task_2_execution
 663 03b0 9091 0000 		lds r25,task_2_execution+1
 664 03b4 A091 0000 		lds r26,task_2_execution+2
 665 03b8 B091 0000 		lds r27,task_2_execution+3
 666 03bc 8093 0000 		sts task_2+19,r24
 667 03c0 9093 0000 		sts task_2+19+1,r25
 668 03c4 A093 0000 		sts task_2+19+2,r26
 669 03c8 B093 0000 		sts task_2+19+3,r27
 670 03cc 1092 0000 		sts task_2+23,__zero_reg__
 671 03d0 1092 0000 		sts task_2+23+1,__zero_reg__
 672 03d4 1092 0000 		sts task_2+23+2,__zero_reg__
 673 03d8 1092 0000 		sts task_2+23+3,__zero_reg__
 674 03dc 1092 0000 		sts task_2+27,__zero_reg__
 675 03e0 1092 0000 		sts task_2+27+1,__zero_reg__
 676 03e4 1092 0000 		sts task_2+27+2,__zero_reg__
 677 03e8 1092 0000 		sts task_2+27+3,__zero_reg__
 678 03ec 1092 0000 		sts task_2+31,__zero_reg__
 679 03f0 1092 0000 		sts task_2+31+1,__zero_reg__
 680 03f4 1092 0000 		sts task_2+31+2,__zero_reg__
 681 03f8 1092 0000 		sts task_2+31+3,__zero_reg__
 682 03fc C0E0      		ldi r28,lo8(task_2)
 683 03fe D0E0      		ldi r29,hi8(task_2)
 684 0400 CE01      		movw r24,r28
 685 0402 60E0      		ldi r22,lo8(gs(task_2_func))
 686 0404 70E0      		ldi r23,hi8(gs(task_2_func))
 687 0406 0E94 0000 		call nrk_task_set_entry_function
 688 040a CE01      		movw r24,r28
 689 040c 60E0      		ldi r22,lo8(stack_2)
 690 040e 70E0      		ldi r23,hi8(stack_2)
 691 0410 40E8      		ldi r20,lo8(128)
 692 0412 50E0      		ldi r21,hi8(128)
 693 0414 0E94 0000 		call nrk_task_set_stk
 694 0418 CE01      		movw r24,r28
 695 041a 0E94 0000 		call nrk_activate_task
  83:main.c        ****     INITIALIZE_TASK(3, BASIC_TASK);
 697               	.LM23:
 698 041e 1093 0000 		sts task_3+7,r17
 699 0422 0093 0000 		sts task_3+8,r16
 700 0426 1093 0000 		sts task_3+9,r17
 701 042a 1093 0000 		sts task_3+10,r17
 702 042e 8091 0000 		lds r24,task_3_period
 703 0432 9091 0000 		lds r25,task_3_period+1
 704 0436 A091 0000 		lds r26,task_3_period+2
 705 043a B091 0000 		lds r27,task_3_period+3
 706 043e 8093 0000 		sts task_3+11,r24
 707 0442 9093 0000 		sts task_3+11+1,r25
 708 0446 A093 0000 		sts task_3+11+2,r26
 709 044a B093 0000 		sts task_3+11+3,r27
 710 044e 1092 0000 		sts task_3+15,__zero_reg__
 711 0452 1092 0000 		sts task_3+15+1,__zero_reg__
 712 0456 1092 0000 		sts task_3+15+2,__zero_reg__
 713 045a 1092 0000 		sts task_3+15+3,__zero_reg__
 714 045e 8091 0000 		lds r24,task_3_execution
 715 0462 9091 0000 		lds r25,task_3_execution+1
 716 0466 A091 0000 		lds r26,task_3_execution+2
 717 046a B091 0000 		lds r27,task_3_execution+3
 718 046e 8093 0000 		sts task_3+19,r24
 719 0472 9093 0000 		sts task_3+19+1,r25
 720 0476 A093 0000 		sts task_3+19+2,r26
 721 047a B093 0000 		sts task_3+19+3,r27
 722 047e 1092 0000 		sts task_3+23,__zero_reg__
 723 0482 1092 0000 		sts task_3+23+1,__zero_reg__
 724 0486 1092 0000 		sts task_3+23+2,__zero_reg__
 725 048a 1092 0000 		sts task_3+23+3,__zero_reg__
 726 048e 1092 0000 		sts task_3+27,__zero_reg__
 727 0492 1092 0000 		sts task_3+27+1,__zero_reg__
 728 0496 1092 0000 		sts task_3+27+2,__zero_reg__
 729 049a 1092 0000 		sts task_3+27+3,__zero_reg__
 730 049e 1092 0000 		sts task_3+31,__zero_reg__
 731 04a2 1092 0000 		sts task_3+31+1,__zero_reg__
 732 04a6 1092 0000 		sts task_3+31+2,__zero_reg__
 733 04aa 1092 0000 		sts task_3+31+3,__zero_reg__
 734 04ae C0E0      		ldi r28,lo8(task_3)
 735 04b0 D0E0      		ldi r29,hi8(task_3)
 736 04b2 CE01      		movw r24,r28
 737 04b4 60E0      		ldi r22,lo8(gs(task_3_func))
 738 04b6 70E0      		ldi r23,hi8(gs(task_3_func))
 739 04b8 0E94 0000 		call nrk_task_set_entry_function
 740 04bc CE01      		movw r24,r28
 741 04be 60E0      		ldi r22,lo8(stack_3)
 742 04c0 70E0      		ldi r23,hi8(stack_3)
 743 04c2 40E8      		ldi r20,lo8(128)
 744 04c4 50E0      		ldi r21,hi8(128)
 745 04c6 0E94 0000 		call nrk_task_set_stk
 746 04ca CE01      		movw r24,r28
 747 04cc 0E94 0000 		call nrk_activate_task
  84:main.c        **** 
  85:main.c        ****     nrk_start();
 749               	.LM24:
 750 04d0 0E94 0000 		call nrk_start
  86:main.c        **** 
  87:main.c        ****     return 0;
  88:main.c        **** }
 752               	.LM25:
 753 04d4 80E0      		ldi r24,lo8(0)
 754 04d6 90E0      		ldi r25,hi8(0)
 755               	/* epilogue start */
 756 04d8 DF91      		pop r29
 757 04da CF91      		pop r28
 758 04dc 1F91      		pop r17
 759 04de 0F91      		pop r16
 760 04e0 0895      		ret
 762               	.Lscope4:
 764               		.stabd	78,0,0
 765               	.global	task_1_period
 766               		.data
 769               	task_1_period:
 770 009b 06        		.byte	6
 771 009c 00        		.byte	0
 772 009d 00        		.byte	0
 773 009e 00        		.byte	0
 774               	.global	task_1_execution
 777               	task_1_execution:
 778 009f 03        		.byte	3
 779 00a0 00        		.byte	0
 780 00a1 00        		.byte	0
 781 00a2 00        		.byte	0
 782               	.global	task_2_period
 785               	task_2_period:
 786 00a3 05        		.byte	5
 787 00a4 00        		.byte	0
 788 00a5 00        		.byte	0
 789 00a6 00        		.byte	0
 790               	.global	task_2_execution
 793               	task_2_execution:
 794 00a7 01        		.byte	1
 795 00a8 00        		.byte	0
 796 00a9 00        		.byte	0
 797 00aa 00        		.byte	0
 798               	.global	task_3_period
 801               	task_3_period:
 802 00ab 07        		.byte	7
 803 00ac 00        		.byte	0
 804 00ad 00        		.byte	0
 805 00ae 00        		.byte	0
 806               	.global	task_3_execution
 809               	task_3_execution:
 810 00af 01        		.byte	1
 811 00b0 00        		.byte	0
 812 00b1 00        		.byte	0
 813 00b2 00        		.byte	0
 814               		.comm _nrk_signal_list,4,1
 815               		.comm nrk_idle_task_stk,128,1
 816               		.comm nrk_kernel_stk,128,1
 817               		.comm nrk_kernel_stk_ptr,2,1
 818               		.comm error_task,1,1
 819               		.comm error_num,1,1
 820               		.comm _nrk_prev_timer_val,1,1
 821               		.comm _nrk_time_trigger,1,1
 822               		.comm app_timer0_callback,2,1
 823               		.comm app_timer0_prescale,1,1
 824               		.comm stack_1,128,1
 825               		.comm task_1,35,1
 826               		.comm stack_2,128,1
 827               		.comm task_2,35,1
 828               		.comm stack_3,128,1
 829               		.comm task_3,35,1
 830               		.comm seed,2,1
 854               		.text
 856               	.Letext0:
 857               	.global __do_copy_data
 858               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc887V0C.s:2      *ABS*:0000003f __SREG__
     /tmp/cc887V0C.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc887V0C.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc887V0C.s:5      *ABS*:00000034 __CCP__
     /tmp/cc887V0C.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc887V0C.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc887V0C.s:148    .text:00000000 task_3_func
     /tmp/cc887V0C.s:225    .text:00000066 task_2_func
     /tmp/cc887V0C.s:473    .text:00000206 task_1_func
     /tmp/cc887V0C.s:542    .text:0000026c main
                            *COM*:00000002 seed
                            *COM*:00000023 task_1
     /tmp/cc887V0C.s:769    .data:0000009b task_1_period
     /tmp/cc887V0C.s:777    .data:0000009f task_1_execution
                            *COM*:00000080 stack_1
                            *COM*:00000023 task_2
     /tmp/cc887V0C.s:785    .data:000000a3 task_2_period
     /tmp/cc887V0C.s:793    .data:000000a7 task_2_execution
                            *COM*:00000080 stack_2
                            *COM*:00000023 task_3
     /tmp/cc887V0C.s:801    .data:000000ab task_3_period
     /tmp/cc887V0C.s:809    .data:000000af task_3_execution
                            *COM*:00000080 stack_3
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000080 nrk_kernel_stk
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num
                            *COM*:00000001 _nrk_prev_timer_val
                            *COM*:00000001 _nrk_time_trigger
                            *COM*:00000002 app_timer0_callback
                            *COM*:00000001 app_timer0_prescale

UNDEFINED SYMBOLS
printf
rand
puts
nrk_wait_until_next_period
nrk_cur_task_TCB
nrk_task_TCB
__divmodhi4
nrk_setup_ports
nrk_setup_uart
nrk_init
nrk_time_set
nrk_time_get
srand
nrk_task_set_entry_function
nrk_task_set_stk
nrk_activate_task
nrk_start
__do_copy_data
__do_clear_bss
